== Info: Could not resolve host: POST
== Info: Closing connection
== Info: Host localhost:8080 was resolved.
== Info: IPv6: ::1
== Info: IPv4: 127.0.0.1
== Info:   Trying [::1]:8080...
== Info: connect to ::1 port 8080 from ::1 port 59864 failed: Connection refused
== Info:   Trying 127.0.0.1:8080...
== Info: Connected to localhost (127.0.0.1) port 8080
=> Send header, 149 bytes (0x95)
0000: 50 4f 53 54 20 2f 61 70 69 2f 76 33 2f 67 65 6e POST /api/v3/gen
0010: 65 72 61 74 65 43 6f 64 65 20 48 54 54 50 2f 31 erateCode HTTP/1
0020: 2e 31 0d 0a 48 6f 73 74 3a 20 6c 6f 63 61 6c 68 .1..Host: localh
0030: 6f 73 74 3a 38 30 38 30 0d 0a 55 73 65 72 2d 41 ost:8080..User-A
0040: 67 65 6e 74 3a 20 63 75 72 6c 2f 38 2e 37 2e 31 gent: curl/8.7.1
0050: 0d 0a 41 63 63 65 70 74 3a 20 2a 2f 2a 0d 0a 43 ..Accept: */*..C
0060: 6f 6e 74 65 6e 74 2d 54 79 70 65 3a 20 61 70 70 ontent-Type: app
0070: 6c 69 63 61 74 69 6f 6e 2f 6a 73 6f 6e 0d 0a 43 lication/json..C
0080: 6f 6e 74 65 6e 74 2d 4c 65 6e 67 74 68 3a 20 32 ontent-Length: 2
0090: 33 0d 0a 0d 0a                                  3....
=> Send data, 23 bytes (0x17)
0000: 7b 22 70 72 6f 6d 70 74 22 3a 22 73 6e 61 6b 65 {"prompt":"snake
0010: 20 67 61 6d 65 22 7d                             game"}
== Info: upload completely sent off: 23 bytes
<= Recv header, 17 bytes (0x11)
0000: 48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d HTTP/1.1 200 OK.
0010: 0a                                              .
<= Recv header, 39 bytes (0x27)
0000: 78 2d 70 6f 77 65 72 65 64 2d 62 79 3a 20 44 61 x-powered-by: Da
0010: 72 74 20 77 69 74 68 20 70 61 63 6b 61 67 65 3a rt with package:
0020: 73 68 65 6c 66 0d 0a                            shelf..
<= Recv header, 97 bytes (0x61)
0000: 61 63 63 65 73 73 2d 63 6f 6e 74 72 6f 6c 2d 61 access-control-a
0010: 6c 6c 6f 77 2d 68 65 61 64 65 72 73 3a 20 4f 72 llow-headers: Or
0020: 69 67 69 6e 2c 20 58 2d 52 65 71 75 65 73 74 65 igin, X-Requeste
0030: 64 2d 57 69 74 68 2c 20 43 6f 6e 74 65 6e 74 2d d-With, Content-
0040: 54 79 70 65 2c 20 41 63 63 65 70 74 2c 20 78 2d Type, Accept, x-
0050: 67 6f 6f 67 2d 61 70 69 2d 63 6c 69 65 6e 74 0d goog-api-client.
0060: 0a                                              .
<= Recv header, 37 bytes (0x25)
0000: 64 61 74 65 3a 20 53 75 6e 2c 20 31 39 20 4a 61 date: Sun, 19 Ja
0010: 6e 20 32 30 32 35 20 30 30 3a 32 39 3a 33 36 20 n 2025 00:29:36 
0020: 47 4d 54 0d 0a                                  GMT..
<= Recv header, 28 bytes (0x1c)
0000: 74 72 61 6e 73 66 65 72 2d 65 6e 63 6f 64 69 6e transfer-encodin
0010: 67 3a 20 63 68 75 6e 6b 65 64 0d 0a             g: chunked..
<= Recv header, 32 bytes (0x20)
0000: 61 63 63 65 73 73 2d 63 6f 6e 74 72 6f 6c 2d 61 access-control-a
0010: 6c 6c 6f 77 2d 6f 72 69 67 69 6e 3a 20 2a 0d 0a llow-origin: *..
<= Recv header, 28 bytes (0x1c)
0000: 63 6f 6e 74 65 6e 74 2d 65 6e 63 6f 64 69 6e 67 content-encoding
0010: 3a 20 69 64 65 6e 74 69 74 79 0d 0a             : identity..
<= Recv header, 50 bytes (0x32)
0000: 61 63 63 65 73 73 2d 63 6f 6e 74 72 6f 6c 2d 61 access-control-a
0010: 6c 6c 6f 77 2d 6d 65 74 68 6f 64 73 3a 20 47 45 llow-methods: GE
0020: 54 2c 20 50 4f 53 54 2c 20 4f 50 54 49 4f 4e 53 T, POST, OPTIONS
0030: 0d 0a                                           ..
<= Recv header, 29 bytes (0x1d)
0000: 78 2d 66 72 61 6d 65 2d 6f 70 74 69 6f 6e 73 3a x-frame-options:
0010: 20 53 41 4d 45 4f 52 49 47 49 4e 0d 0a           SAMEORIGIN..
<= Recv header, 41 bytes (0x29)
0000: 63 6f 6e 74 65 6e 74 2d 74 79 70 65 3a 20 74 65 content-type: te
0010: 78 74 2f 70 6c 61 69 6e 3b 20 63 68 61 72 73 65 xt/plain; charse
0020: 74 3d 75 74 66 2d 38 0d 0a                      t=utf-8..
<= Recv header, 33 bytes (0x21)
0000: 78 2d 78 73 73 2d 70 72 6f 74 65 63 74 69 6f 6e x-xss-protection
0010: 3a 20 31 3b 20 6d 6f 64 65 3d 62 6c 6f 63 6b 0d : 1; mode=block.
0020: 0a                                              .
<= Recv header, 33 bytes (0x21)
0000: 78 2d 63 6f 6e 74 65 6e 74 2d 74 79 70 65 2d 6f x-content-type-o
0010: 70 74 69 6f 6e 73 3a 20 6e 6f 73 6e 69 66 66 0d ptions: nosniff.
0020: 0a                                              .
<= Recv header, 2 bytes (0x2)
0000: 0d 0a                                           ..
<= Recv data, 53 bytes (0x35)
0000: 33 31 0d 0a 0a 43 48 55 4e 4b 3a 20 69 6d 70 6f 31...CHUNK: impo
0010: 72 74 20 27 64 61 72 74 3a 61 73 79 6e 63 27 3b rt 'dart:async';
0020: 0a 69 6d 70 6f 72 74 20 27 64 61 72 74 3a 6d 61 .import 'dart:ma
0030: 74 68 27 3b 0a                                  th';.
<= Recv data, 69 bytes (0x45)
0000: 0d 0a 33 46 0d 0a 0a 43 48 55 4e 4b 3a 20 69 6d ..3F...CHUNK: im
0010: 70 6f 72 74 20 27 70 61 63 6b 61 67 65 3a 66 6c port 'package:fl
0020: 75 74 74 65 72 2f 6d 61 74 65 72 69 61 6c 2e 64 utter/material.d
0030: 61 72 74 27 3b 0a 0a 76 6f 69 64 20 6d 61 69 6e art';..void main
0040: 28 29 20 7b 0a                                  () {.
<= Recv data, 132 bytes (0x84)
0000: 0d 0a 37 45 0d 0a 0a 43 48 55 4e 4b 3a 20 20 20 ..7E...CHUNK:   
0010: 72 75 6e 41 70 70 28 63 6f 6e 73 74 20 53 6e 61 runApp(const Sna
0020: 6b 65 47 61 6d 65 41 70 70 28 29 29 3b 0a 7d 0a keGameApp());.}.
0030: 0a 63 6c 61 73 73 20 53 6e 61 6b 65 47 61 6d 65 .class SnakeGame
0040: 41 70 70 20 65 78 74 65 6e 64 73 20 53 74 61 74 App extends Stat
0050: 65 6c 65 73 73 57 69 64 67 65 74 20 7b 0a 20 20 elessWidget {.  
0060: 63 6f 6e 73 74 20 53 6e 61 6b 65 47 61 6d 65 41 const SnakeGameA
0070: 70 70 28 7b 73 75 70 65 72 2e 6b 65 79 7d 29 3b pp({super.key});
0080: 0a 0a 20 20                                     ..  
<= Recv data, 130 bytes (0x82)
0000: 0d 0a 37 43 0d 0a 0a 43 48 55 4e 4b 3a 20 40 6f ..7C...CHUNK: @o
0010: 76 65 72 72 69 64 65 0a 20 20 57 69 64 67 65 74 verride.  Widget
0020: 20 62 75 69 6c 64 28 42 75 69 6c 64 43 6f 6e 74  build(BuildCont
0030: 65 78 74 20 63 6f 6e 74 65 78 74 29 20 7b 0a 20 ext context) {. 
0040: 20 20 20 72 65 74 75 72 6e 20 63 6f 6e 73 74 20    return const 
0050: 4d 61 74 65 72 69 61 6c 41 70 70 28 0a 20 20 20 MaterialApp(.   
0060: 20 20 20 68 6f 6d 65 3a 20 53 6e 61 6b 65 47 61    home: SnakeGa
0070: 6d 65 28 29 2c 0a 20 20 20 20 29 3b 0a 20 20 7d me(),.    );.  }
0080: 0a 7d                                           .}
<= Recv data, 208 bytes (0xd0)
0000: 0d 0a 43 41 0d 0a 0a 43 48 55 4e 4b 3a 20 0a 0a ..CA...CHUNK: ..
0010: 63 6c 61 73 73 20 53 6e 61 6b 65 47 61 6d 65 20 class SnakeGame 
0020: 65 78 74 65 6e 64 73 20 53 74 61 74 65 66 75 6c extends Stateful
0030: 57 69 64 67 65 74 20 7b 0a 20 20 63 6f 6e 73 74 Widget {.  const
0040: 20 53 6e 61 6b 65 47 61 6d 65 28 7b 73 75 70 65  SnakeGame({supe
0050: 72 2e 6b 65 79 7d 29 3b 0a 0a 20 20 40 6f 76 65 r.key});..  @ove
0060: 72 72 69 64 65 0a 20 20 5f 53 6e 61 6b 65 47 61 rride.  _SnakeGa
0070: 6d 65 53 74 61 74 65 20 63 72 65 61 74 65 53 74 meState createSt
0080: 61 74 65 28 29 20 3d 3e 20 5f 53 6e 61 6b 65 47 ate() => _SnakeG
0090: 61 6d 65 53 74 61 74 65 28 29 3b 0a 7d 0a 0a 63 ameState();.}..c
00a0: 6c 61 73 73 20 5f 53 6e 61 6b 65 47 61 6d 65 53 lass _SnakeGameS
00b0: 74 61 74 65 20 65 78 74 65 6e 64 73 20 53 74 61 tate extends Sta
00c0: 74 65 3c 53 6e 61 6b 65 47 61 6d 65 3e 20 7b 0a te<SnakeGame> {.
<= Recv data, 171 bytes (0xab)
0000: 0d 0a 41 35 0d 0a 0a 43 48 55 4e 4b 3a 20 20 20 ..A5...CHUNK:   
0010: 73 74 61 74 69 63 20 63 6f 6e 73 74 20 69 6e 74 static const int
0020: 20 67 72 69 64 53 69 7a 65 20 3d 20 32 30 3b 0a  gridSize = 20;.
0030: 20 20 73 74 61 74 69 63 20 63 6f 6e 73 74 20 64   static const d
0040: 6f 75 62 6c 65 20 73 6e 61 6b 65 53 70 65 65 64 ouble snakeSpeed
0050: 20 3d 20 32 30 30 3b 20 2f 2f 20 6d 69 6c 6c 69  = 200; // milli
0060: 73 65 63 6f 6e 64 73 0a 20 20 6c 61 74 65 20 54 seconds.  late T
0070: 69 6d 65 72 20 74 69 6d 65 72 3b 0a 20 20 6c 61 imer timer;.  la
0080: 74 65 20 69 6e 74 20 63 75 72 72 65 6e 74 44 69 te int currentDi
0090: 72 65 63 74 69 6f 6e 3b 20 2f 2f 20 30 3a 20 75 rection; // 0: u
00a0: 70 2c 20 31 3a 20 72 69 67 68 74                p, 1: right
<= Recv data, 186 bytes (0xba)
0000: 0d 0a 42 34 0d 0a 0a 43 48 55 4e 4b 3a 20 2c 20 ..B4...CHUNK: , 
0010: 32 3a 20 64 6f 77 6e 2c 20 33 3a 20 6c 65 66 74 2: down, 3: left
0020: 0a 20 20 4c 69 73 74 3c 4f 66 66 73 65 74 3e 20 .  List<Offset> 
0030: 73 6e 61 6b 65 20 3d 20 5b 63 6f 6e 73 74 20 4f snake = [const O
0040: 66 66 73 65 74 28 31 30 2c 20 31 30 29 5d 3b 20 ffset(10, 10)]; 
0050: 2f 2f 49 6e 69 74 69 61 6c 20 73 6e 61 6b 65 20 //Initial snake 
0060: 70 6f 73 69 74 69 6f 6e 0a 20 20 4f 66 66 73 65 position.  Offse
0070: 74 20 66 6f 6f 64 20 3d 20 63 6f 6e 73 74 20 4f t food = const O
0080: 66 66 73 65 74 28 31 35 2c 20 31 35 29 3b 0a 20 ffset(15, 15);. 
0090: 20 62 6f 6f 6c 20 67 61 6d 65 4f 76 65 72 20 3d  bool gameOver =
00a0: 20 66 61 6c 73 65 3b 0a 20 20 69 6e 74 20 73 63  false;.  int sc
00b0: 6f 72 65 20 3d 20 30 3b 0a 0a                   ore = 0;..
<= Recv data, 229 bytes (0xe5)
0000: 0d 0a 44 46 0d 0a 0a 43 48 55 4e 4b 3a 20 20 20 ..DF...CHUNK:   
0010: 40 6f 76 65 72 72 69 64 65 0a 20 20 76 6f 69 64 @override.  void
0020: 20 69 6e 69 74 53 74 61 74 65 28 29 20 7b 0a 20  initState() {. 
0030: 20 20 20 73 75 70 65 72 2e 69 6e 69 74 53 74 61    super.initSta
0040: 74 65 28 29 3b 0a 20 20 20 20 63 75 72 72 65 6e te();.    curren
0050: 74 44 69 72 65 63 74 69 6f 6e 20 3d 20 31 3b 20 tDirection = 1; 
0060: 2f 2f 20 53 74 61 72 74 20 6d 6f 76 69 6e 67 20 // Start moving 
0070: 72 69 67 68 74 0a 20 20 20 20 5f 73 74 61 72 74 right.    _start
0080: 47 61 6d 65 28 29 3b 0a 20 20 7d 0a 0a 20 20 20 Game();.  }..   
0090: 20 40 6f 76 65 72 72 69 64 65 0a 20 20 76 6f 69  @override.  voi
00a0: 64 20 64 69 73 70 6f 73 65 28 29 20 7b 0a 20 20 d dispose() {.  
00b0: 20 20 74 69 6d 65 72 2e 63 61 6e 63 65 6c 28 29   timer.cancel()
00c0: 3b 0a 20 20 20 20 73 75 70 65 72 2e 64 69 73 70 ;.    super.disp
00d0: 6f 73 65 28 29 3b 0a 20 20 7d 0a 0a 0a 20 20 76 ose();.  }...  v
00e0: 6f 69 64 20 5f                                  oid _
<= Recv data, 230 bytes (0xe6)
0000: 0d 0a 45 30 0d 0a 0a 43 48 55 4e 4b 3a 20 73 74 ..E0...CHUNK: st
0010: 61 72 74 47 61 6d 65 28 29 20 7b 0a 20 20 20 20 artGame() {.    
0020: 73 6e 61 6b 65 20 3d 20 5b 63 6f 6e 73 74 20 4f snake = [const O
0030: 66 66 73 65 74 28 31 30 2c 20 31 30 29 5d 3b 0a ffset(10, 10)];.
0040: 20 20 20 20 66 6f 6f 64 20 3d 20 5f 67 65 6e 65     food = _gene
0050: 72 61 74 65 46 6f 6f 64 50 6f 73 69 74 69 6f 6e rateFoodPosition
0060: 28 29 3b 0a 20 20 20 20 63 75 72 72 65 6e 74 44 ();.    currentD
0070: 69 72 65 63 74 69 6f 6e 20 3d 20 31 3b 0a 20 20 irection = 1;.  
0080: 20 20 67 61 6d 65 4f 76 65 72 20 3d 20 66 61 6c   gameOver = fal
0090: 73 65 3b 0a 20 20 20 20 73 63 6f 72 65 20 3d 20 se;.    score = 
00a0: 30 3b 0a 20 20 20 20 74 69 6d 65 72 20 3d 20 54 0;.    timer = T
00b0: 69 6d 65 72 2e 70 65 72 69 6f 64 69 63 28 63 6f imer.periodic(co
00c0: 6e 73 74 20 44 75 72 61 74 69 6f 6e 28 6d 69 6c nst Duration(mil
00d0: 6c 69 73 65 63 6f 6e 64 73 3a 20 73 6e 61 6b 65 liseconds: snake
00e0: 53 70 65 65 64 2e                               Speed.
<= Recv data, 229 bytes (0xe5)
0000: 0d 0a 44 46 0d 0a 0a 43 48 55 4e 4b 3a 20 74 6f ..DF...CHUNK: to
0010: 49 6e 74 28 29 29 2c 20 28 74 69 6d 65 72 29 20 Int()), (timer) 
0020: 7b 0a 20 20 20 20 20 20 69 66 28 21 67 61 6d 65 {.      if(!game
0030: 4f 76 65 72 29 20 7b 0a 20 20 20 20 20 20 5f 6d Over) {.      _m
0040: 6f 76 65 53 6e 61 6b 65 28 29 3b 0a 20 20 20 20 oveSnake();.    
0050: 20 20 7d 0a 20 20 20 20 20 7d 29 3b 0a 20 20 7d   }.     });.  }
0060: 0a 0a 20 20 4f 66 66 73 65 74 20 5f 67 65 6e 65 ..  Offset _gene
0070: 72 61 74 65 46 6f 6f 64 50 6f 73 69 74 69 6f 6e rateFoodPosition
0080: 28 29 20 7b 0a 20 20 20 20 66 69 6e 61 6c 20 72 () {.    final r
0090: 61 6e 64 6f 6d 20 3d 20 52 61 6e 64 6f 6d 28 29 andom = Random()
00a0: 3b 0a 20 20 20 20 4f 66 66 73 65 74 20 6e 65 77 ;.    Offset new
00b0: 46 6f 6f 64 3b 0a 20 20 20 20 64 6f 20 7b 0a 20 Food;.    do {. 
00c0: 20 20 20 20 20 6e 65 77 46 6f 6f 64 20 3d 20 4f      newFood = O
00d0: 66 66 73 65 74 28 0a 20 20 20 20 20 20 20 20 72 ffset(.        r
00e0: 61 6e 64 6f 6d                                  andom
<= Recv data, 236 bytes (0xec)
0000: 0d 0a 45 36 0d 0a 0a 43 48 55 4e 4b 3a 20 2e 6e ..E6...CHUNK: .n
0010: 65 78 74 49 6e 74 28 67 72 69 64 53 69 7a 65 29 extInt(gridSize)
0020: 2e 74 6f 44 6f 75 62 6c 65 28 29 2c 0a 20 20 20 .toDouble(),.   
0030: 20 20 20 20 20 72 61 6e 64 6f 6d 2e 6e 65 78 74      random.next
0040: 49 6e 74 28 67 72 69 64 53 69 7a 65 29 2e 74 6f Int(gridSize).to
0050: 44 6f 75 62 6c 65 28 29 2c 0a 20 20 20 20 20 20 Double(),.      
0060: 29 3b 0a 20 20 20 20 7d 20 77 68 69 6c 65 28 73 );.    } while(s
0070: 6e 61 6b 65 2e 63 6f 6e 74 61 69 6e 73 28 6e 65 nake.contains(ne
0080: 77 46 6f 6f 64 29 29 3b 0a 20 20 20 20 72 65 74 wFood));.    ret
0090: 75 72 6e 20 6e 65 77 46 6f 6f 64 3b 0a 20 20 7d urn newFood;.  }
00a0: 0a 0a 0a 20 20 76 6f 69 64 20 5f 6d 6f 76 65 53 ...  void _moveS
00b0: 6e 61 6b 65 28 29 20 7b 0a 20 20 20 20 20 20 73 nake() {.      s
00c0: 65 74 53 74 61 74 65 28 28 29 20 7b 0a 20 20 20 etState(() {.   
00d0: 20 20 20 4f 66 66 73 65 74 20 68 65 61 64 20 3d    Offset head =
00e0: 20 73 6e 61 6b 65 2e 66 69 72 73 74              snake.first
<= Recv data, 223 bytes (0xdf)
0000: 0d 0a 44 39 0d 0a 0a 43 48 55 4e 4b 3a 20 3b 0a ..D9...CHUNK: ;.
0010: 20 20 20 20 20 20 4f 66 66 73 65 74 20 6e 65 77       Offset new
0020: 48 65 61 64 3b 0a 0a 20 20 20 20 20 20 73 77 69 Head;..      swi
0030: 74 63 68 20 28 63 75 72 72 65 6e 74 44 69 72 65 tch (currentDire
0040: 63 74 69 6f 6e 29 20 7b 0a 20 20 20 20 20 20 20 ction) {.       
0050: 20 63 61 73 65 20 30 3a 20 2f 2f 20 55 70 0a 20  case 0: // Up. 
0060: 20 20 20 20 20 20 20 20 20 6e 65 77 48 65 61 64          newHead
0070: 20 3d 20 4f 66 66 73 65 74 28 68 65 61 64 2e 64  = Offset(head.d
0080: 78 2c 20 68 65 61 64 2e 64 79 20 2d 20 31 29 3b x, head.dy - 1);
0090: 0a 20 20 20 20 20 20 20 20 20 20 62 72 65 61 6b .          break
00a0: 3b 0a 20 20 20 20 20 20 20 20 63 61 73 65 20 31 ;.        case 1
00b0: 3a 20 2f 2f 20 52 69 67 68 74 0a 20 20 20 20 20 : // Right.     
00c0: 20 20 20 20 20 6e 65 77 48 65 61 64 20 3d 20 4f      newHead = O
00d0: 66 66 73 65 74 28 68 65 61 64 2e 64 78 20 2b    ffset(head.dx +
<= Recv data, 204 bytes (0xcc)
0000: 0d 0a 43 36 0d 0a 0a 43 48 55 4e 4b 3a 20 20 31 ..C6...CHUNK:  1
0010: 2c 20 68 65 61 64 2e 64 79 29 3b 0a 20 20 20 20 , head.dy);.    
0020: 20 20 20 20 20 20 62 72 65 61 6b 3b 0a 20 20 20       break;.   
0030: 20 20 20 20 20 63 61 73 65 20 32 3a 20 2f 2f 20      case 2: // 
0040: 44 6f 77 6e 0a 20 20 20 20 20 20 20 20 20 20 6e Down.          n
0050: 65 77 48 65 61 64 20 3d 20 4f 66 66 73 65 74 28 ewHead = Offset(
0060: 68 65 61 64 2e 64 78 2c 20 68 65 61 64 2e 64 79 head.dx, head.dy
0070: 20 2b 20 31 29 3b 0a 20 20 20 20 20 20 20 20 20  + 1);.         
0080: 20 62 72 65 61 6b 3b 0a 20 20 20 20 20 20 20 20  break;.        
0090: 63 61 73 65 20 33 3a 20 2f 2f 20 4c 65 66 74 0a case 3: // Left.
00a0: 20 20 20 20 20 20 20 20 20 20 6e 65 77 48 65 61           newHea
00b0: 64 20 3d 20 4f 66 66 73 65 74 28 68 65 61 64 2e d = Offset(head.
00c0: 64 78 20 2d 20 31 2c 20 68 65 61 64             dx - 1, head
<= Recv data, 7 bytes (0x7)
0000: 0d 0a 31 30 33 0d 0a                            ..103..
<= Recv data, 259 bytes (0x103)
0000: 0a 43 48 55 4e 4b 3a 20 2e 64 79 29 3b 0a 20 20 .CHUNK: .dy);.  
0010: 20 20 20 20 20 20 20 20 62 72 65 61 6b 3b 0a 20         break;. 
0020: 20 20 20 20 20 20 20 64 65 66 61 75 6c 74 3a 0a        default:.
0030: 20 20 20 20 20 20 20 20 20 20 6e 65 77 48 65 61           newHea
0040: 64 20 3d 20 68 65 61 64 3b 0a 20 20 20 20 20 20 d = head;.      
0050: 7d 0a 0a 20 20 20 20 20 20 20 20 69 66 20 28 5f }..        if (_
0060: 63 68 65 63 6b 43 6f 6c 6c 69 73 69 6f 6e 28 6e checkCollision(n
0070: 65 77 48 65 61 64 29 29 20 7b 0a 20 20 20 20 20 ewHead)) {.     
0080: 20 20 20 20 20 67 61 6d 65 4f 76 65 72 20 3d 20      gameOver = 
0090: 74 72 75 65 3b 0a 20 20 20 20 20 20 20 20 20 20 true;.          
00a0: 74 69 6d 65 72 2e 63 61 6e 63 65 6c 28 29 3b 0a timer.cancel();.
00b0: 20 20 20 20 20 20 20 20 20 20 5f 73 68 6f 77 47           _showG
00c0: 61 6d 65 4f 76 65 72 44 69 61 6c 6f 67 28 29 3b ameOverDialog();
00d0: 0a 20 20 20 20 20 20 20 20 20 20 72 65 74 75 72 .          retur
00e0: 6e 3b 0a 20 20 20 20 20 20 20 20 7d 0a 0a 20 20 n;.        }..  
00f0: 20 20 20 20 20 20 73 6e 61 6b 65 2e 69 6e 73 65       snake.inse
0100: 72 74 28                                        rt(
<= Recv data, 225 bytes (0xe1)
0000: 0d 0a 44 42 0d 0a 0a 43 48 55 4e 4b 3a 20 30 2c ..DB...CHUNK: 0,
0010: 20 6e 65 77 48 65 61 64 29 3b 0a 0a 20 20 20 20  newHead);..    
0020: 20 20 69 66 20 28 6e 65 77 48 65 61 64 20 3d 3d   if (newHead ==
0030: 20 66 6f 6f 64 29 20 7b 0a 20 20 20 20 20 20 20  food) {.       
0040: 20 73 63 6f 72 65 2b 2b 3b 0a 20 20 20 20 20 20  score++;.      
0050: 20 20 66 6f 6f 64 20 3d 20 5f 67 65 6e 65 72 61   food = _genera
0060: 74 65 46 6f 6f 64 50 6f 73 69 74 69 6f 6e 28 29 teFoodPosition()
0070: 3b 0a 20 20 20 20 20 20 7d 20 65 6c 73 65 20 7b ;.      } else {
0080: 0a 20 20 20 20 20 20 20 20 20 73 6e 61 6b 65 2e .         snake.
0090: 72 65 6d 6f 76 65 4c 61 73 74 28 29 3b 0a 20 20 removeLast();.  
00a0: 20 20 20 20 7d 0a 20 20 20 20 20 7d 29 3b 0a 20     }.     });. 
00b0: 20 7d 0a 0a 20 20 62 6f 6f 6c 20 5f 63 68 65 63  }..  bool _chec
00c0: 6b 43 6f 6c 6c 69 73 69 6f 6e 28 4f 66 66 73 65 kCollision(Offse
00d0: 74 20 68 65 61 64 29 20 7b 0a 20 20 20 20 69 66 t head) {.    if
00e0: 28                                              (
<= Recv data, 203 bytes (0xcb)
0000: 0d 0a 43 35 0d 0a 0a 43 48 55 4e 4b 3a 20 68 65 ..C5...CHUNK: he
0010: 61 64 2e 64 78 20 3c 20 30 20 7c 7c 20 68 65 61 ad.dx < 0 || hea
0020: 64 2e 64 78 20 3e 3d 20 67 72 69 64 53 69 7a 65 d.dx >= gridSize
0030: 20 7c 7c 20 68 65 61 64 2e 64 79 20 3c 20 30 20  || head.dy < 0 
0040: 7c 7c 20 68 65 61 64 2e 64 79 20 3e 3d 20 67 72 || head.dy >= gr
0050: 69 64 53 69 7a 65 29 20 7b 0a 20 20 20 20 20 20 idSize) {.      
0060: 72 65 74 75 72 6e 20 74 72 75 65 3b 0a 20 20 20 return true;.   
0070: 20 7d 0a 0a 20 20 20 20 69 66 28 73 6e 61 6b 65  }..    if(snake
0080: 2e 73 75 62 6c 69 73 74 28 31 29 2e 63 6f 6e 74 .sublist(1).cont
0090: 61 69 6e 73 28 68 65 61 64 29 29 20 7b 0a 20 20 ains(head)) {.  
00a0: 20 20 20 20 20 20 72 65 74 75 72 6e 20 74 72 75       return tru
00b0: 65 3b 0a 20 20 20 20 7d 0a 0a 20 20 20 20 72 65 e;.    }..    re
00c0: 74 75 72 6e 20 66 61 6c 73 65 3b                turn false;
<= Recv data, 276 bytes (0x114)
0000: 0d 0a 31 30 44 0d 0a 0a 43 48 55 4e 4b 3a 20 0a ..10D...CHUNK: .
0010: 0a 20 20 7d 0a 0a 0a 20 20 20 76 6f 69 64 20 5f .  }...   void _
0020: 73 68 6f 77 47 61 6d 65 4f 76 65 72 44 69 61 6c showGameOverDial
0030: 6f 67 28 29 20 7b 0a 20 20 20 20 73 68 6f 77 44 og() {.    showD
0040: 69 61 6c 6f 67 28 0a 20 20 20 20 20 20 20 20 63 ialog(.        c
0050: 6f 6e 74 65 78 74 3a 20 63 6f 6e 74 65 78 74 2c ontext: context,
0060: 0a 20 20 20 20 20 20 20 20 62 61 72 72 69 65 72 .        barrier
0070: 44 69 73 6d 69 73 73 69 62 6c 65 3a 20 66 61 6c Dismissible: fal
0080: 73 65 2c 0a 20 20 20 20 20 20 20 20 62 75 69 6c se,.        buil
0090: 64 65 72 3a 20 28 42 75 69 6c 64 43 6f 6e 74 65 der: (BuildConte
00a0: 78 74 20 63 6f 6e 74 65 78 74 29 20 7b 0a 20 20 xt context) {.  
00b0: 20 20 20 20 20 20 72 65 74 75 72 6e 20 41 6c 65       return Ale
00c0: 72 74 44 69 61 6c 6f 67 28 0a 20 20 20 20 20 20 rtDialog(.      
00d0: 20 20 74 69 74 6c 65 3a 20 63 6f 6e 73 74 20 54   title: const T
00e0: 65 78 74 28 27 47 61 6d 65 20 4f 76 65 72 27 29 ext('Game Over')
00f0: 2c 0a 20 20 20 20 20 20 20 20 63 6f 6e 74 65 6e ,.        conten
0100: 74 3a 20 54 65 78 74 28 27 59 6f 75 72 20 73 63 t: Text('Your sc
0110: 6f 72 65 3a                                     ore:
<= Recv data, 257 bytes (0x101)
0000: 0d 0a 46 42 0d 0a 0a 43 48 55 4e 4b 3a 20 20 24 ..FB...CHUNK:  $
0010: 73 63 6f 72 65 27 29 2c 0a 20 20 20 20 20 20 20 score'),.       
0020: 20 61 63 74 69 6f 6e 73 3a 20 3c 57 69 64 67 65  actions: <Widge
0030: 74 3e 5b 0a 20 20 20 20 20 20 20 20 54 65 78 74 t>[.        Text
0040: 42 75 74 74 6f 6e 28 0a 20 20 20 20 20 20 20 20 Button(.        
0050: 6f 6e 50 72 65 73 73 65 64 3a 20 28 29 20 7b 0a onPressed: () {.
0060: 20 20 20 20 20 20 20 20 4e 61 76 69 67 61 74 6f         Navigato
0070: 72 2e 6f 66 28 63 6f 6e 74 65 78 74 29 2e 70 6f r.of(context).po
0080: 70 28 29 3b 0a 20 20 20 20 20 20 20 20 20 5f 73 p();.         _s
0090: 74 61 72 74 47 61 6d 65 28 29 3b 0a 20 20 20 20 tartGame();.    
00a0: 20 20 20 20 20 7d 2c 0a 20 20 20 20 20 20 20 20      },.        
00b0: 63 68 69 6c 64 3a 20 63 6f 6e 73 74 20 54 65 78 child: const Tex
00c0: 74 28 27 50 6c 61 79 20 41 67 61 69 6e 27 29 2c t('Play Again'),
00d0: 0a 20 20 20 20 20 20 20 20 29 0a 20 20 20 20 20 .        ).     
00e0: 20 20 20 5d 2c 0a 20 20 20 20 20 20 20 20 29 3b    ],.        );
00f0: 0a 20 20 20 20 20 20 20 20 7d 29 3b 0a 20 20 20 .        });.   
0100: 20                                               
<= Recv data, 259 bytes (0x103)
0000: 0d 0a 46 44 0d 0a 0a 43 48 55 4e 4b 3a 20 7d 0a ..FD...CHUNK: }.
0010: 0a 20 20 40 6f 76 65 72 72 69 64 65 0a 20 20 57 .  @override.  W
0020: 69 64 67 65 74 20 62 75 69 6c 64 28 42 75 69 6c idget build(Buil
0030: 64 43 6f 6e 74 65 78 74 20 63 6f 6e 74 65 78 74 dContext context
0040: 29 20 7b 0a 20 20 20 20 72 65 74 75 72 6e 20 53 ) {.    return S
0050: 63 61 66 66 6f 6c 64 28 0a 20 20 20 20 20 20 61 caffold(.      a
0060: 70 70 42 61 72 3a 20 41 70 70 42 61 72 28 0a 20 ppBar: AppBar(. 
0070: 20 20 20 20 20 20 20 74 69 74 6c 65 3a 20 63 6f        title: co
0080: 6e 73 74 20 54 65 78 74 28 27 53 6e 61 6b 65 20 nst Text('Snake 
0090: 47 61 6d 65 27 29 2c 0a 20 20 20 20 20 20 20 20 Game'),.        
00a0: 63 65 6e 74 65 72 54 69 74 6c 65 3a 20 74 72 75 centerTitle: tru
00b0: 65 2c 0a 20 20 20 20 20 20 29 2c 0a 20 20 20 20 e,.      ),.    
00c0: 20 20 62 6f 64 79 3a 20 47 65 73 74 75 72 65 44   body: GestureD
00d0: 65 74 65 63 74 6f 72 28 0a 20 20 20 20 20 20 20 etector(.       
00e0: 20 6f 6e 56 65 72 74 69 63 61 6c 44 72 61 67 55  onVerticalDragU
00f0: 70 64 61 74 65 3a 20 28 64 65 74 61 69 6c 73 29 pdate: (details)
0100: 20 7b 0a                                         {.
<= Recv data, 245 bytes (0xf5)
0000: 0d 0a 45 46 0d 0a 0a 43 48 55 4e 4b 3a 20 20 20 ..EF...CHUNK:   
0010: 20 20 20 20 20 20 20 20 69 66 28 64 65 74 61 69         if(detai
0020: 6c 73 2e 64 65 6c 74 61 2e 64 79 20 3e 20 30 20 ls.delta.dy > 0 
0030: 26 26 20 63 75 72 72 65 6e 74 44 69 72 65 63 74 && currentDirect
0040: 69 6f 6e 20 21 3d 20 30 29 7b 0a 20 20 20 20 20 ion != 0){.     
0050: 20 20 20 20 20 20 20 63 75 72 72 65 6e 74 44 69        currentDi
0060: 72 65 63 74 69 6f 6e 20 3d 20 32 3b 20 2f 2f 44 rection = 2; //D
0070: 6f 77 6e 0a 20 20 20 20 20 20 20 20 20 20 7d 65 own.          }e
0080: 6c 73 65 20 69 66 20 28 64 65 74 61 69 6c 73 2e lse if (details.
0090: 64 65 6c 74 61 2e 64 79 20 3c 20 30 20 26 26 20 delta.dy < 0 && 
00a0: 63 75 72 72 65 6e 74 44 69 72 65 63 74 69 6f 6e currentDirection
00b0: 20 21 3d 20 32 29 7b 0a 20 20 20 20 20 20 20 20  != 2){.        
00c0: 20 20 20 20 20 63 75 72 72 65 6e 74 44 69 72 65      currentDire
00d0: 63 74 69 6f 6e 20 3d 20 30 3b 20 2f 2f 20 55 70 ction = 0; // Up
00e0: 0a 20 20 20 20 20 20 20 20 20 20 7d 0a 20 20 20 .          }.   
00f0: 20 20 20 20 20                                       
<= Recv data, 246 bytes (0xf6)
0000: 0d 0a 46 30 0d 0a 0a 43 48 55 4e 4b 3a 20 7d 2c ..F0...CHUNK: },
0010: 0a 20 20 20 20 20 20 20 20 6f 6e 48 6f 72 69 7a .        onHoriz
0020: 6f 6e 74 61 6c 44 72 61 67 55 70 64 61 74 65 3a ontalDragUpdate:
0030: 20 28 64 65 74 61 69 6c 73 29 20 7b 0a 20 20 20  (details) {.   
0040: 20 20 20 20 20 20 20 20 69 66 28 64 65 74 61 69         if(detai
0050: 6c 73 2e 64 65 6c 74 61 2e 64 78 20 3e 20 30 20 ls.delta.dx > 0 
0060: 26 26 20 63 75 72 72 65 6e 74 44 69 72 65 63 74 && currentDirect
0070: 69 6f 6e 20 21 3d 20 33 29 7b 0a 20 20 20 20 20 ion != 3){.     
0080: 20 20 20 20 20 20 20 20 63 75 72 72 65 6e 74 44         currentD
0090: 69 72 65 63 74 69 6f 6e 20 3d 20 31 3b 20 2f 2f irection = 1; //
00a0: 20 52 69 67 68 74 0a 20 20 20 20 20 20 20 20 20  Right.         
00b0: 20 7d 65 6c 73 65 20 69 66 28 64 65 74 61 69 6c  }else if(detail
00c0: 73 2e 64 65 6c 74 61 2e 64 78 20 3c 20 30 20 26 s.delta.dx < 0 &
00d0: 26 20 63 75 72 72 65 6e 74 44 69 72 65 63 74 69 & currentDirecti
00e0: 6f 6e 20 21 3d 20 31 29 7b 0a 20 20 20 20 20 20 on != 1){.      
00f0: 20 20 20 20 20 20                                     
<= Recv data, 268 bytes (0x10c)
0000: 0d 0a 31 30 35 0d 0a 0a 43 48 55 4e 4b 3a 20 63 ..105...CHUNK: c
0010: 75 72 72 65 6e 74 44 69 72 65 63 74 69 6f 6e 20 urrentDirection 
0020: 3d 20 33 3b 20 2f 2f 4c 65 66 74 0a 20 20 20 20 = 3; //Left.    
0030: 20 20 20 20 20 20 7d 0a 20 20 20 20 20 20 20 20       }.        
0040: 7d 2c 0a 0a 20 20 20 20 20 20 20 20 63 68 69 6c },..        chil
0050: 64 3a 20 43 6f 6e 74 61 69 6e 65 72 28 0a 20 20 d: Container(.  
0060: 20 20 20 20 20 20 20 20 63 6f 6c 6f 72 3a 20 43         color: C
0070: 6f 6c 6f 72 73 2e 67 72 65 79 5b 32 30 30 5d 2c olors.grey[200],
0080: 0a 20 20 20 20 20 20 20 20 20 20 63 68 69 6c 64 .          child
0090: 3a 20 41 73 70 65 63 74 52 61 74 69 6f 28 0a 20 : AspectRatio(. 
00a0: 20 20 20 20 20 20 20 20 20 20 20 61 73 70 65 63            aspec
00b0: 74 52 61 74 69 6f 3a 20 31 2c 0a 20 20 20 20 20 tRatio: 1,.     
00c0: 20 20 20 20 20 20 20 63 68 69 6c 64 3a 20 47 72        child: Gr
00d0: 69 64 56 69 65 77 2e 62 75 69 6c 64 65 72 28 0a idView.builder(.
00e0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 70 68               ph
00f0: 79 73 69 63 73 3a 20 63 6f 6e 73 74 20 4e 65 76 ysics: const Nev
0100: 65 72 53 63 72 6f 6c 6c 61 62 6c 65             erScrollable
<= Recv data, 332 bytes (0x14c)
0000: 0d 0a 31 34 35 0d 0a 0a 43 48 55 4e 4b 3a 20 53 ..145...CHUNK: S
0010: 63 72 6f 6c 6c 50 68 79 73 69 63 73 28 29 2c 0a crollPhysics(),.
0020: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 69 74               it
0030: 65 6d 43 6f 75 6e 74 3a 20 67 72 69 64 53 69 7a emCount: gridSiz
0040: 65 20 2a 20 67 72 69 64 53 69 7a 65 2c 0a 20 20 e * gridSize,.  
0050: 20 20 20 20 20 20 20 20 20 20 20 20 67 72 69 64             grid
0060: 44 65 6c 65 67 61 74 65 3a 20 53 6c 69 76 65 72 Delegate: Sliver
0070: 47 72 69 64 44 65 6c 65 67 61 74 65 57 69 74 68 GridDelegateWith
0080: 46 69 78 65 64 43 72 6f 73 73 41 78 69 73 43 6f FixedCrossAxisCo
0090: 75 6e 74 28 0a 20 20 20 20 20 20 20 20 20 20 20 unt(.           
00a0: 20 20 20 20 20 63 72 6f 73 73 41 78 69 73 43 6f      crossAxisCo
00b0: 75 6e 74 3a 20 67 72 69 64 53 69 7a 65 2c 0a 20 unt: gridSize,. 
00c0: 20 20 20 20 20 20 20 20 20 20 20 20 20 29 2c 0a              ),.
00d0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 69 74               it
00e0: 65 6d 42 75 69 6c 64 65 72 3a 20 28 63 6f 6e 74 emBuilder: (cont
00f0: 65 78 74 2c 20 69 6e 64 65 78 29 20 7b 0a 20 20 ext, index) {.  
0100: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 66 69               fi
0110: 6e 61 6c 20 78 20 3d 20 69 6e 64 65 78 20 25 20 nal x = index % 
0120: 67 72 69 64 53 69 7a 65 3b 0a 20 20 20 20 20 20 gridSize;.      
0130: 20 20 20 20 20 20 20 20 20 20 66 69 6e 61 6c 20           final 
0140: 79 20 3d 20 69 6e 64 65 78 20 7e 2f             y = index ~/
<= Recv data, 333 bytes (0x14d)
0000: 0d 0a 31 34 36 0d 0a 0a 43 48 55 4e 4b 3a 20 20 ..146...CHUNK:  
0010: 67 72 69 64 53 69 7a 65 3b 0a 0a 20 20 20 20 20 gridSize;..     
0020: 20 20 20 20 20 20 20 20 20 20 20 69 66 20 28 73            if (s
0030: 6e 61 6b 65 2e 63 6f 6e 74 61 69 6e 73 28 4f 66 nake.contains(Of
0040: 66 73 65 74 28 78 2e 74 6f 44 6f 75 62 6c 65 28 fset(x.toDouble(
0050: 29 2c 20 79 2e 74 6f 44 6f 75 62 6c 65 28 29 29 ), y.toDouble())
0060: 29 29 20 7b 0a 20 20 20 20 20 20 20 20 20 20 20 )) {.           
0070: 20 20 20 20 20 20 20 72 65 74 75 72 6e 20 43 6f        return Co
0080: 6e 74 61 69 6e 65 72 28 0a 20 20 20 20 20 20 20 ntainer(.       
0090: 20 20 20 20 20 20 20 20 20 20 20 20 20 63 6f 6c              col
00a0: 6f 72 3a 20 43 6f 6c 6f 72 73 2e 67 72 65 65 6e or: Colors.green
00b0: 2c 0a 20 20 20 20 20 20 20 20 20 20 20 20 20 20 ,.              
00c0: 20 20 20 20 29 3b 0a 20 20 20 20 20 20 20 20 20     );.         
00d0: 20 20 20 20 20 20 20 7d 20 65 6c 73 65 20 69 66        } else if
00e0: 20 28 66 6f 6f 64 20 3d 3d 20 4f 66 66 73 65 74  (food == Offset
00f0: 28 78 2e 74 6f 44 6f 75 62 6c 65 28 29 2c 20 79 (x.toDouble(), y
0100: 2e 74 6f 44 6f 75 62 6c 65 28 29 29 29 20 7b 0a .toDouble())) {.
0110: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                 
0120: 20 20 72 65 74 75 72 6e 20 43 6f 6e 74 61 69 6e   return Contain
0130: 65 72 28 0a 20 20 20 20 20 20 20 20 20 20 20 20 er(.            
0140: 20 20 20 20 20 20 20 20 63 6f 6c 6f 72                  color
<= Recv data, 331 bytes (0x14b)
0000: 0d 0a 31 34 34 0d 0a 0a 43 48 55 4e 4b 3a 20 3a ..144...CHUNK: :
0010: 20 43 6f 6c 6f 72 73 2e 72 65 64 2c 0a 20 20 20  Colors.red,.   
0020: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 29                )
0030: 3b 0a 20 20 20 20 20 20 20 20 20 20 20 20 20 20 ;.              
0040: 20 20 7d 0a 20 20 20 20 20 20 20 20 20 20 20 20   }.            
0050: 20 20 20 20 20 65 6c 73 65 20 7b 0a 20 20 20 20      else {.    
0060: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 72 65               re
0070: 74 75 72 6e 20 43 6f 6e 74 61 69 6e 65 72 28 0a turn Container(.
0080: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                 
0090: 20 20 20 20 63 6f 6c 6f 72 3a 20 43 6f 6c 6f 72     color: Color
00a0: 73 2e 67 72 65 79 5b 33 30 30 5d 2c 0a 20 20 20 s.grey[300],.   
00b0: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 29                )
00c0: 3b 0a 20 20 20 20 20 20 20 20 20 20 20 20 20 20 ;.              
00d0: 20 20 7d 0a 20 20 20 20 20 20 20 20 20 20 20 20   }.            
00e0: 20 20 7d 2c 0a 20 20 20 20 20 20 20 20 20 20 20   },.           
00f0: 20 29 2c 0a 20 20 20 20 20 20 20 20 20 20 29 2c  ),.          ),
0100: 0a 20 20 20 20 20 20 20 20 29 2c 0a 20 20 20 20 .        ),.    
0110: 20 20 29 2c 0a 20 20 20 20 20 20 62 6f 74 74 6f   ),.      botto
0120: 6d 4e 61 76 69 67 61 74 69 6f 6e 42 61 72 3a 20 mNavigationBar: 
0130: 42 6f 74 74 6f 6d 41 70 70 42 61 72 28 0a 20 20 BottomAppBar(.  
0140: 20 20 20 20 20 20 63 68 69 6c 64                      child
<= Recv data, 260 bytes (0x104)
0000: 0d 0a 46 45 0d 0a 0a 43 48 55 4e 4b 3a 20 3a 20 ..FE...CHUNK: : 
0010: 50 61 64 64 69 6e 67 28 0a 20 20 20 20 20 20 20 Padding(.       
0020: 20 20 20 70 61 64 64 69 6e 67 3a 20 63 6f 6e 73    padding: cons
0030: 74 20 45 64 67 65 49 6e 73 65 74 73 2e 61 6c 6c t EdgeInsets.all
0040: 28 31 36 2e 30 29 2c 0a 20 20 20 20 20 20 20 20 (16.0),.        
0050: 20 20 63 68 69 6c 64 3a 20 54 65 78 74 28 27 53   child: Text('S
0060: 63 6f 72 65 3a 20 24 73 63 6f 72 65 27 2c 0a 20 core: $score',. 
0070: 20 20 20 20 20 20 20 20 20 74 65 78 74 41 6c 69          textAli
0080: 67 6e 3a 20 54 65 78 74 41 6c 69 67 6e 2e 63 65 gn: TextAlign.ce
0090: 6e 74 65 72 2c 0a 20 20 20 20 20 20 20 20 20 20 nter,.          
00a0: 73 74 79 6c 65 3a 20 63 6f 6e 73 74 20 54 65 78 style: const Tex
00b0: 74 53 74 79 6c 65 28 66 6f 6e 74 53 69 7a 65 3a tStyle(fontSize:
00c0: 20 32 30 2c 20 66 6f 6e 74 57 65 69 67 68 74 3a  20, fontWeight:
00d0: 20 46 6f 6e 74 57 65 69 67 68 74 2e 62 6f 6c 64  FontWeight.bold
00e0: 29 2c 0a 20 20 20 20 20 20 20 20 20 20 20 29 2c ),.           ),
00f0: 0a 20 20 20 20 20 20 20 20 29 2c 0a 20 20 20 20 .        ),.    
0100: 20 20 29 2c                                       ),
<= Recv data, 29 bytes (0x1d)
0000: 0d 0a 31 37 0d 0a 0a 43 48 55 4e 4b 3a 20 0a 20 ..17...CHUNK: . 
0010: 20 20 20 29 3b 0a 20 20 7d 0a 7d 0a 0a             );.  }.}..
<= Recv data, 7 bytes (0x7)
0000: 0d 0a 30 0d 0a 0d 0a                            ..0....
== Info: Connection #1 to host localhost left intact
